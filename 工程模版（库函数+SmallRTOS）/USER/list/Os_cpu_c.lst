C51 COMPILER V9.02   OS_CPU_C                                                              11/03/2015 18:27:55 PAGE 1   


C51 COMPILER V9.02, COMPILATION OF MODULE OS_CPU_C
OBJECT MODULE PLACED IN .\list\Os_cpu_c.obj
COMPILER INVOKED BY: d:\Keil_v5\C51\BIN\C51.EXE ..\keilc51\Os_cpu_c.c LARGE OPTIMIZE(7,SPEED) BROWSE INCDIR(..\MyDriver;
                    -..\Lib\inc;..\Lib\src) DEBUG OBJECTEXTEND PRINT(.\list\Os_cpu_c.lst) TABS(2) OBJECT(.\list\Os_cpu_c.obj)

line level    source

   1          /*********************************************************************************************************
   2          **                                       Small RTOS 51
   3          **                                   The Real-Time Kernel For Keil c51
   4          **
   5          **                                  (c) Copyright 2002-2003, chenmingji
   6          **                                           All Rights Reserved
   7          **
   8          **                                                  V1.12.0
   9          **
  10          **
  11          **--------------文件信息--------------------------------------------------------------------------------
  12          **文   件   名: OS_CPU_C.C
  13          **创   建   人: 陈明计
  14          **最后修改日期:  2002年12月2日
  15          **描        述: Small RTOS 51与CPU(既8051系列)相关的C语言代码
  16          **
  17          **--------------历史版本信息----------------------------------------------------------------------------
  18          ** 创建人: 陈明计
  19          ** 版  本: V0.50
  20          ** 日　期: 2002年2月22日
  21          ** 描　述: 原始版本
  22          **
  23          **------------------------------------------------------------------------------------------------------
  24          ** 修改人: 陈明计
  25          ** 版  本: V0.52
  26          ** 日　期: 2002年5月9日
  27          ** 描　述: 更正for keil c51 移植的堆栈在某种情况下初始值错误
  28          **
  29          **------------------------------------------------------------------------------------------------------
  30          ** 修改人: 陈明计
  31          ** 版  本: V1.00
  32          ** 日　期: 2002年6月20日
  33          ** 描　述: 增加配置
  34          **
  35          **------------------------------------------------------------------------------------------------------
  36          ** 修改人: 陈明计
  37          ** 版  本: V1.10
  38          ** 日　期: 2002年9月1日
  39          ** 描　述: 根据新版本要求更改变量定义
  40          **
  41          **------------------------------------------------------------------------------------------------------
  42          ** 修改人: 陈明计
  43          ** 版  本: V1.10.4
  44          ** 日　期: 2002年10月5日
  45          ** 描　述: 统一了一下格式和宏定义风格
  46          **
  47          **------------------------------------------------------------------------------------------------------
  48          ** 修改人: 陈明计
  49          ** 版  本: V1.10.5
  50          ** 日　期: 2002年10月23日
  51          ** 描　述: 修改OSTickISR()使得在允许的情况下，每次进入中断都调用UserTickTimer()
  52          **
  53          **------------------------------------------------------------------------------------------------------
  54          ** 修改人: 陈明计
C51 COMPILER V9.02   OS_CPU_C                                                              11/03/2015 18:27:55 PAGE 2   

  55          ** 版  本: V1.11.0
  56          ** 日　期: 2002年12月2日
  57          ** 描　述: 根据新版本要求增加函数OSIdle和修改函数OSStart；增加注释
  58          **
  59          **------------------------------------------------------------------------------------------------------
  60          ** 修改人: 陈明计
  61          ** 版  本: V1.12.0
  62          ** 日　期: 2002年12月30日
  63          ** 描　述: 根据新版本要求修改初始化代码
  64          **
  65          **--------------当前版本修订------------------------------------------------------------------------------
  66          ** 修改人:
  67          ** 日　期:
  68          ** 描　述:
  69          **
  70          **------------------------------------------------------------------------------------------------------
  71          ********************************************************************************************************/
  72          
  73          #define  IN_OS_CPU_C
  74          #include "CONFIG.h"
*** WARNING C322 IN LINE 530 OF ..\LIB\INC\STC15FXXXX.H: unknown identifier
*** WARNING C322 IN LINE 532 OF ..\LIB\INC\STC15FXXXX.H: unknown identifier
*** WARNING C322 IN LINE 534 OF ..\LIB\INC\STC15FXXXX.H: unknown identifier
*** WARNING C322 IN LINE 536 OF ..\LIB\INC\STC15FXXXX.H: unknown identifier
*** WARNING C322 IN LINE 538 OF ..\LIB\INC\STC15FXXXX.H: unknown identifier
*** WARNING C322 IN LINE 540 OF ..\LIB\INC\STC15FXXXX.H: unknown identifier
*** WARNING C322 IN LINE 542 OF ..\LIB\INC\STC15FXXXX.H: unknown identifier
  75          
  76          extern idata uint8 STACK[1];                    /* 堆栈起始位置,在OS_CPU_A定义 */
  77          uint8 idata * data OSTsakStackBotton[OS_MAX_TASKS + 2];/* 任务堆栈底部位置            */
  78          
  79          #if EN_SP2 > 0
              uint8 idata  Sp2[Sp2Space];                     /* 高级中断堆栈           */
              #endif
  82          
  83          #if OS_MAX_TASKS < 9            
  84          uint8 data OSFastSwap = 0xff;                   /* 任务是否可以快速切换 */
  85          #else
              uint16 data OSFastSwap = 0xffff;
              #endif
  88          
  89          
  90          /*********************************************************************************************************
  91          ** 函数名称: C_OSCtxSw
  92          ** 功能描述: 用C写的堆栈处理函数,已经用汇编改写,此函数在移植并非必须
  93          ** 输　入: 无
  94          ** 输　出 : 无
  95          ** 全局变量: OSTaskID,OSTsakStackBotton,SP
  96          ** 调用模块: LoadCtx
  97          ** 
  98          ** 作　者: 陈明计
  99          ** 日　期: 2002年2月22日
 100          **-------------------------------------------------------------------------------------------------------
 101          ** 修改人:
 102          ** 日　期:
 103          **-------------------------------------------------------------------------------------------------------
 104          ********************************************************************************************************/
 105          /*        void C_OSCtxSw(void) 
 106          
 107          {
 108              uint8 idata *cp1,idata *cp2;
 109              uint8 i,temp;
C51 COMPILER V9.02   OS_CPU_C                                                              11/03/2015 18:27:55 PAGE 3   

 110              
 111              cp1 = (uint8 idata *)SP +1;
 112              temp = (uint8 )OSTsakStackBotton[OSNextTaskID+1];
 113              cp2 = OSTsakStackBotton[OSTaskID+1];
 114              if( OSNextTaskID > OSTaskID)
 115              {
 116                  while(cp2 != (uint8 idata *)temp)
 117                  {
 118                      *cp1++ = *cp2++;
 119                  }
 120                  OSNextTaskID++;
 121                  OSTaskID++;
 122                  temp = OSTsakStackBotton[OSTaskID] - (uint8 idata *)SP-1;
 123                  SP = (uint8 )cp1 - 1;        
 124                  for(i = OSTaskID;i < OSNextTaskID; i++)
 125                  {
 126                      OSTsakStackBotton[i] -= temp;
 127                  }
 128                  OSNextTaskID--;
 129                  OSTaskID = OSNextTaskID;
 130                  LoadCtx();    
 131              }
 132          
 133              if( OSNextTaskID < OSTaskID)
 134              {
 135                  cp2--;
 136                  cp1--;
 137                  while(cp2 != (uint8 idata *)temp)
 138                  {
 139                      *cp2-- = *cp1--;
 140                  }
 141                  OSTaskID++;
 142                  temp = OSTsakStackBotton[OSTaskID] - (uint8 idata *)SP-1;
 143                  SP = (uint8 )OSTsakStackBotton[OSNextTaskID+1];
 144                  for(i = OSNextTaskID+1;i < OSTaskID; i++)
 145                  {
 146                      OSTsakStackBotton[i] += temp;
 147                  }
 148                  OSTaskID = OSNextTaskID;        
 149                  SP--;
 150              }
 151              LoadCtx();
 152              LoadCtx();
 153          }
 154          */
 155          
 156          /*********************************************************************************************************
 157          ** 函数名称: OSIdle
 158          ** 功能描述: 优先级最低的任务
 159          ** 输　入: 无
 160          ** 输　出 : 无
 161          ** 全局变量: 无
 162          ** 调用模块: 无
 163          ** 
 164          ** 作　者: 陈明计
 165          ** 日　期: 2002年12月2日
 166          **-------------------------------------------------------------------------------------------------------
 167          ** 修改人:
 168          ** 日　期:
 169          **-------------------------------------------------------------------------------------------------------
 170          ********************************************************************************************************/
 171          
C51 COMPILER V9.02   OS_CPU_C                                                              11/03/2015 18:27:55 PAGE 4   

 172                  void OSIdle(void)
 173          {
 174   1          while(1)
 175   1          {
 176   2              PCON = PCON | 0x01;                     /* CPU进入休眠状态 */
 177   2          }
 178   1      }
 179          
 180          /*********************************************************************************************************
 181          ** 函数名称: OSStart
 182          ** 功能描述: Small RTOS 51初始化函数,调用此函数后多任务开始运行,首先执ID为0的任务
 183          ** 输　入: 无
 184          ** 输　出 : 无
 185          ** 全局变量: OSTsakStackBotton,SP
 186          ** 调用模块: 无
 187          ** 
 188          ** 作　者: 陈明计
 189          ** 日　期: 2002年2月22日
 190          **-------------------------------------------------------------------------------------------------------
 191          ** 修改人: 陈明计
 192          ** 日　期: 2002年12月2日
 193          **-------------------------------------------------------------------------------------------------------
 194          ** 修改人: 陈明计
 195          ** 日　期: 2002年12月30日
 196          **-------------------------------------------------------------------------------------------------------
 197          ** 修改人:
 198          ** 日　期:
 199          **-------------------------------------------------------------------------------------------------------
 200          ********************************************************************************************************/
 201                  void OSStart(void)
 202                  
 203          {
 204   1          uint8 idata *cp;
 205   1          uint8 i;
 206   1          
 207   1          cp = STACK;
 208   1          
 209   1          OSTsakStackBotton[0] = STACK;
 210   1          OSTsakStackBotton[OS_MAX_TASKS + 1] = (uint8 idata *)(IDATA_RAM_SIZE % 256);
 211   1          
 212   1          /* 初始化优先级最高的任务堆栈，使返回地址为任务开始地址 */
 213   1          *cp++ = ((uint16)(TaskFuction[0])) % 256;
 214   1          SP = (uint8) cp;
 215   1          *cp = ((uint16)(TaskFuction[0])) / 256;
 216   1      
 217   1          /* 初始化优先级最低的任务堆栈 */
 218   1          cp = (uint8 idata *)(IDATA_RAM_SIZE - 1) ;
 219   1          *cp-- = 0;
 220   1          *cp-- =  ((uint16)(OSIdle)) / 256;
 221   1          OSTsakStackBotton[OS_MAX_TASKS] = cp;
 222   1          *cp-- =  ((uint16)(OSIdle)) % 256;
 223   1          
 224   1          /* 初始化其它优先级的任务堆栈 */
 225   1          for(i = OS_MAX_TASKS - 1; i > 0; i--)
 226   1          {
 227   2              *cp-- = 0;
 228   2              *cp-- =  ((uint16)(TaskFuction[i])) / 256;
 229   2              OSTsakStackBotton[i] = cp;
 230   2              *cp-- =  ((uint16)(TaskFuction[i])) % 256;
 231   2          }
 232   1          /* 允许中断 */
 233   1          Os_Enter_Sum = 1;
C51 COMPILER V9.02   OS_CPU_C                                                              11/03/2015 18:27:55 PAGE 5   

 234   1          OS_EXIT_CRITICAL();
 235   1          /* 函数返回优先级最高的任务 */
 236   1      }
 237          
 238          /*********************************************************************************************************
 239          ** 函数名称: OSTickISR
 240          ** 功能描述: 系统时钟中断服务函数
 241          ** 输　入: 无
 242          ** 输　出 : 无
 243          ** 全局变量: 无
 244          ** 调用模块: OS_IBT_ENTER,(UserTickTimer),OSTimeTick,OSIntExit
 245          ** 
 246          ** 作　者: 陈明计
 247          ** 日　期: 2002年2月22日
 248          **-------------------------------------------------------------------------------------------------------
 249          ** 修改人: 陈明计
 250          ** 日　期: 2002年10月23日
 251          **-------------------------------------------------------------------------------------------------------
 252          ** 修改人:
 253          ** 日　期:
 254          **-------------------------------------------------------------------------------------------------------
 255          ********************************************************************************************************/
 256          #if EN_OS_INT_ENTER >0 
 257          #pragma disable                                        /* 除非最高优先级中断，否则，必须加上这一句        
             -         */
 258          #endif
 259                  void OSTickISR(void) interrupt OS_TIME_ISR
 260          
 261          {
 262   1      #if TICK_TIMER_SHARING >1 
                  static uint8 TickSum = 0;
              #endif
 265   1      
 266   1      #if EN_USER_TICK_TIMER > 0 
                  UserTickTimer();                                    /* 用户函数                                       
             -          */
              #endif
 269   1      
 270   1      #if TICK_TIMER_SHARING >1 
                  TickSum = (TickSum + 1) % TICK_TIMER_SHARING;
                  if (TickSum != 0)
                  {
                      return;
                  }
              #endif
 277   1      
 278   1      #if EN_OS_INT_ENTER > 0 
 279   1          OS_INT_ENTER();                                     /* 中断开始处理                                   
             - */
 280   1      #endif
 281   1          
 282   1      
 283   1      #if EN_TIMER_SHARING > 0
 284   1          OSTimeTick();                                       /* 调用系统时钟处理函数                           
             - */
 285   1      #else
                  OSIntSendSignal(TIME_ISR_TASK_ID);                  /* 唤醒ID为TIME_ISR_TASK_ID的任务                 
             -*/
              #endif
 288   1          
 289   1          OSIntExit();                                        /* 中断结束处理                                   
             -          */
C51 COMPILER V9.02   OS_CPU_C                                                              11/03/2015 18:27:55 PAGE 6   

 290   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    220    ----
   CONSTANT SIZE    =      9    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      6    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  7 WARNING(S),  0 ERROR(S)
